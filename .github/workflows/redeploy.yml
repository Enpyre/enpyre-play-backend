name: Redeploy Trigger

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: 'Rebuild image?'
        required: true
        default: 'false'


env:
  PYTHON_VERSION: '3.10.7'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && inputs.rebuild == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      ## Configurando as credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      ## Fazendo login no AWS ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      ## Fazendo build da imagem da aplicação e armazenando no ECR
      - name: Build and push image to Amazon ECR
        id: build_image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
        shell: bash
        run: |
          docker build --build-arg ENVIRONMENT=production -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configurando as credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Force redeploy of the service
      - name: Force deployment
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment
          aws ecs wait services-stable --cluster ${{ secrets.ECS_CLUSTER }} --services ${{ secrets.ECS_SERVICE }}
  deploy_celery:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configurando as credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Force redeploy of the service
      - name: Force deployment
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_CELERY }} --service ${{ secrets.ECS_SERVICE_CELERY }} --force-new-deployment
          aws ecs wait services-stable --cluster ${{ secrets.ECS_CLUSTER_CELERY }} --services ${{ secrets.ECS_SERVICE_CELERY }}
